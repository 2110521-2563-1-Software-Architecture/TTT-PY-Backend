openapi: 3.0.0
info:
  version: 1.0.0
  title: CHATGUNCUP API
  description: TTT-PY CHATGUNCUP API
host: localhost:8081
basePath: /
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: ts
        email:
          type: string
          example: ts@ts
        firstname:
          type: string
          example: t
        lastname:
          type: string
          example: s
    ChatRoom:
      type: object
      properties:
        chatRoomID:
          type: integer
          example: 13
        username1:
          type: string
          example: "ts"
        username2:
          type: string
          example: "a"
  definitions:
    BadRequest:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 400
        message:
          type: string
          example: Incorrect input format
    Unauthorized:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 401
        message:
          type: string
          example: Unauthorized
    InternalError:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 500
        message:
          type: string
          example: Internal Error

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: authorization

security:
  - ApiKeyAuth: []
paths:
  /user:
    get:
      tags:
        - User
      security:
        - ApiKeyAuth: []
      summary: return array of object of the user
      responses:
        200:
          description: Array of the user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    $ref: "#/components/schemas/User"
                  message:
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /user/search:
    get:
      tags:
        - User
      security:
        - ApiKeyAuth: []
      summary: return array of object of specified user
      parameters:
        - name: username
          in: query
          required: true
          description: username of specified user
          schema:
            type: string
      responses:
        200:
          description: A user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    $ref: "#/components/schemas/User"
                  message:
                    type: string
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /auth/login:
    post:
      tags:
        - Auth
      summary: For user login. return token to the user for login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                  description: The user's username
                password:
                  type: string
                  required: true
                  description: The user's password
      responses:
        201:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                  message:
                    type: string
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /auth/register:
    post:
      tags:
        - Auth
      summary: For user registration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                  description: The user's username
                email:
                  type: string
                  required: true
                  description: The user's email
                password:
                  type: string
                  required: true
                  description: The user's password
      responses:
        201:
          description: Register successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      email:
                        type: string
                  message:
                    type: string
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /friend:
    get:
      tags:
        - Friend
      security:
        - ApiKeyAuth: []
      summary: return array of object of the all user's friends
      responses:
        200:
          description: Array of all user's friend object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  message:
                    type: string
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /friend/add:
    post:
      tags:
        - Friend
      security:
        - ApiKeyAuth: []
      summary: create friendship between users by username
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: ts
      responses:
        201:
          description: Friendship is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  data:
                    type: object
                  message:
                    type: string
                    example: Friendship is created
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /chat/rooms:
    get:
      tags:
        - Chat
      security:
        - ApiKeyAuth: []
      summary: return array of object of the all user's chatrooms
      responses:
        200:
          description: Array of all user's chatrooms object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChatRoom"
                  message:
                    type: string
                    example: ""
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /chat/room/:
    get:
      tags:
        - Chat
      security:
        - ApiKeyAuth: []
      summary: return array of object of specified chatroom
      parameters:
        - name: chatRoomID
          in: query
          required: true
          description: chatRoomID of specified chatroom
          schema:
            type: integer
      responses:
        200:
          description: A chatroom object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    $ref: "#/components/schemas/ChatRoom"
                  message:
                    type: ""
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
  /chat/room:
    post:
      tags:
        - Chat
      security:
        - ApiKeyAuth: []
      summary: create new chatroom between users by username
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: ts
      responses:
        201:
          description: Chatroom is created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 201
                  data:
                    type: object
                  message:
                    type: string
                    example: Friendship is created
        400:
          description: Bad Request
          content:
            applcation/json:
              schema:
                $ref: "#/components/definitions/BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
        500:
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/InternalError"
tags:
  - name: User
  - name: Auth
  - name: Friend
