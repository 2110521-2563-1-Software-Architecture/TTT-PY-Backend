openapi: 3.0.0
info:
  version: 1.0.0
  title: CHATGUNCUP API
  description: TTT-PY CHATGUNCUP API
host: localhost:8081
basePath: /
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: ts
        email:
          type: string
          example: ts@ts
        firstname:
          type: string
          example: t
        lastname:
          type: string
          example: s
  definitions:
    BadRequest:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 400
        message:
          type: string
          example: Incorrect input format
    Unauthorized:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 401
        message:
          type: string
          example: Unauthorized
    InternalError:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: integer
          example: 500
        message:
          type: string
          example: Internal Error

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: authorization

security:
  - ApiKeyAuth: []
paths:
  /user:
    get:
      tags:
        - User
      security:
        - ApiKeyAuth: []
      summary: return array of object of all user
      responses:
        200:
          description: Array of all user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  message:
                    type: string
                    example: null
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/definitions/Unauthorized"
  /user/search:
    get:
      tags:
        - User
      security:
        - ApiKeyAuth: []
      summary: return object of user whose username is matched
      parameters:
        - in: query
          name: username
          schema:
            type: string
          description: The username that user want to find
      responses:
        200:
          description: object of user whose username is matched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    $ref: "#/components/schemas/User"
                  message:
                    type: string
                    example: null
  /auth/login:
    post:
      tags:
        - Auth
      summary: To send token for user
      parameters:
        - in: body
          name: username
          schema:
            type: string
          description: The user's username
        - in: body
          name: password
          schema:
            type: string
          description: The user's password
      responses:
        201:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                  message:
                    type: string
  /auth/register:
tags:
  - name: User
  - name: Auth
  - name: Friend
